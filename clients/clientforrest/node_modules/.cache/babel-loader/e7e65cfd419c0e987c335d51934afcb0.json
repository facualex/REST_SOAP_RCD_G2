{"ast":null,"code":"var _jsxFileName = \"/Users/facualex/Documents/development/universidad/REST_SOAP_RCD_G2/clients/clientforrest/src/screens/NameSplitter/index.js\",\n    _s = $RefreshSig$();\n\nimport cogoToast from \"cogo-toast\";\nimport { useState } from \"react\";\nimport API from \"../../api\";\nimport \"./index.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  namesInput: \"\",\n  names: \"\",\n  lastNames: \"\",\n  isLoading: false\n};\n\nfunction App() {\n  _s();\n\n  const [state, setState] = useState(initialState);\n  const {\n    namesInput,\n    names,\n    lastNames,\n    isLoading\n  } = state;\n\n  function setField(event) {\n    const {\n      value\n    } = event.target;\n    setState(prevState => ({ ...prevState,\n      namesInput: value\n    }));\n  }\n\n  async function handleSplitClick() {\n    try {\n      if (!namesInput) {\n        setState(prevState => ({ ...prevState,\n          namesInput: \"\"\n        }));\n        return cogoToast.error(\"Debes ingresar nombres y apellidos para realizar el split.\");\n      } // Valida que se ingrese al menos un nombre y apellido paterno y materno\n\n\n      if (namesInput.split(\" \").filter(name => name).length < 3) {\n        setState(prevState => ({ ...prevState,\n          namesInput: \"\"\n        }));\n        return cogoToast.error(\"Debes ingresar al menos un nombre, apellido paterno y apellido materno.\");\n      }\n\n      setState(prevState => ({ ...prevState,\n        isLoading: true\n      }));\n      const response = await API.splitNames(namesInput);\n      const jsonResponse = await response.json();\n\n      if (jsonResponse && jsonResponse.data) {\n        const {\n          names,\n          lastNames\n        } = jsonResponse.data;\n        setState(prevState => ({ ...prevState,\n          names,\n          lastNames,\n          isLoading: false\n        }));\n        return cogoToast.success(\"Operación realizada con éxito!\");\n      }\n    } catch (error) {\n      setState(prevState => ({ ...prevState,\n        dv: \"\",\n        isLoading: false\n      }));\n      cogoToast.error(error);\n      console.log(error);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-group-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"main-rut-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"main-rut\",\n            children: \"Ingrese nombres y apellidos\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            name: \"rut\",\n            placeholder: \"Ejemplo: Juan Jos\\xE9 Rodriguez Hernandez\",\n            value: namesInput,\n            className: \"main-rut\",\n            id: \"main-rut\",\n            onChange: setField,\n            autoComplete: \"off\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"calculate-button\",\n        onClick: handleSplitClick,\n        children: isLoading ? \"Cargando...\" : \"Realizar Split\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), names && lastNames ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"results-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"names-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"names-container-title\",\n          children: \"Nombres\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 13\n        }, this), names ? names.map((name, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"result-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"result-item-count\",\n            children: index + 1\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"result-item-text\",\n            children: name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 19\n        }, this)) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"lastNames-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"names-container-title\",\n          children: \"Apellidos\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 13\n        }, this), names ? lastNames.map((lastName, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"result-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"result-item-count\",\n            children: index + 1\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"result-item-text\",\n            children: lastName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 19\n        }, this)) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"2/eSVXfk2V5ZKttKXeUPXMa6Sd8=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/facualex/Documents/development/universidad/REST_SOAP_RCD_G2/clients/clientforrest/src/screens/NameSplitter/index.js"],"names":["cogoToast","useState","API","initialState","namesInput","names","lastNames","isLoading","App","state","setState","setField","event","value","target","prevState","handleSplitClick","error","split","filter","name","length","response","splitNames","jsonResponse","json","data","success","dv","console","log","map","index","lastName"],"mappings":"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","sourcesContent":["import cogoToast from \"cogo-toast\";\nimport { useState } from \"react\";\nimport API from \"../../api\";\nimport \"./index.css\";\n\nconst initialState = {\n  namesInput: \"\",\n  names: \"\",\n  lastNames: \"\",\n  isLoading: false,\n};\n\nfunction App() {\n  const [state, setState] = useState(initialState);\n\n  const { namesInput, names, lastNames, isLoading } = state;\n\n  function setField(event) {\n    const { value } = event.target;\n\n    setState((prevState) => ({\n      ...prevState,\n      namesInput: value,\n    }));\n  }\n\n  async function handleSplitClick() {\n    try {\n      if (!namesInput) {\n        setState((prevState) => ({\n          ...prevState,\n          namesInput: \"\",\n        }));\n\n        return cogoToast.error(\n          \"Debes ingresar nombres y apellidos para realizar el split.\"\n        );\n      }\n\n      // Valida que se ingrese al menos un nombre y apellido paterno y materno\n      if (namesInput.split(\" \").filter((name) => name).length < 3) {\n        setState((prevState) => ({\n          ...prevState,\n          namesInput: \"\",\n        }));\n\n        return cogoToast.error(\n          \"Debes ingresar al menos un nombre, apellido paterno y apellido materno.\"\n        );\n      }\n\n      setState((prevState) => ({\n        ...prevState,\n        isLoading: true,\n      }));\n\n      const response = await API.splitNames(namesInput);\n      const jsonResponse = await response.json();\n\n      if (jsonResponse && jsonResponse.data) {\n        const { names, lastNames } = jsonResponse.data;\n\n        setState((prevState) => ({\n          ...prevState,\n          names,\n          lastNames,\n          isLoading: false,\n        }));\n        return cogoToast.success(\"Operación realizada con éxito!\");\n      }\n    } catch (error) {\n      setState((prevState) => ({\n        ...prevState,\n        dv: \"\",\n        isLoading: false,\n      }));\n\n      cogoToast.error(error);\n      console.log(error);\n    }\n  }\n\n  return (\n    <div className=\"container\">\n      <div className=\"input-group-container\">\n        <div className=\"input-group\">\n          <div className=\"main-rut-group\">\n            <label htmlFor=\"main-rut\">Ingrese nombres y apellidos</label>\n            <input\n              name=\"rut\"\n              placeholder=\"Ejemplo: Juan José Rodriguez Hernandez\"\n              value={namesInput}\n              className=\"main-rut\"\n              id=\"main-rut\"\n              onChange={setField}\n              autoComplete=\"off\"\n            />\n          </div>\n        </div>\n        <button className=\"calculate-button\" onClick={handleSplitClick}>\n          {isLoading ? \"Cargando...\" : \"Realizar Split\"}\n        </button>\n      </div>\n      {names && lastNames ? (\n        <div className=\"results-container\">\n          <div className=\"names-container\">\n            <h2 className=\"names-container-title\">Nombres</h2>\n            {names\n              ? names.map((name, index) => (\n                  <div className=\"result-item\">\n                    <span className=\"result-item-count\">{index + 1}</span>\n                    <div className=\"result-item-text\">{name}</div>\n                  </div>\n                ))\n              : null}\n          </div>\n          <div className=\"lastNames-container\">\n            <h2 className=\"names-container-title\">Apellidos</h2>\n            {names\n              ? lastNames.map((lastName, index) => (\n                  <div className=\"result-item\">\n                    <span className=\"result-item-count\">{index + 1}</span>\n                    <div className=\"result-item-text\">{lastName}</div>\n                  </div>\n                ))\n              : null}\n          </div>\n        </div>\n      ) : null}\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}