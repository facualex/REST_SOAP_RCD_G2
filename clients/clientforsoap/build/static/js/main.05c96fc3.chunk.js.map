{"version":3,"sources":["screens/App/index.js","index.js"],"names":["initialState","namesInput","names","lastNames","isLoading","App","useState","state","setState","xmlRequest","a","prevState","cogoToast","error","split","filter","name","length","axios","post","process","headers","response","console","log","dv","className","htmlFor","placeholder","value","id","onChange","event","target","autoComplete","onClick","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0RAKMA,EAAe,CACnBC,WAAY,GACZC,MAAO,GACPC,UAAW,GACXC,WAAW,GAqHEC,MAlHf,WAAgB,IAAD,EACaC,mBAASN,GADtB,mBACNO,EADM,KACCC,EADD,KAGLP,EAA4CM,EAA5CN,WAA8BG,GAAcG,EAAhCL,MAAgCK,EAAzBJ,UAAyBI,EAAdH,WAElCK,EAAU,iKAIIR,EAJJ,qEALD,4CAwBb,4BAAAS,EAAA,kEAEST,EAFT,uBAGMO,GAAS,SAACG,GAAD,mBAAC,eACLA,GADI,IAEPV,WAAY,QALpB,kBAQaW,IAAUC,MACf,+DATR,YAcQZ,EAAWa,MAAM,KAAKC,QAAO,SAAAC,GAAI,OAAIA,KAAMC,OAAS,GAd5D,uBAeMT,GAAS,SAACG,GAAD,mBAAC,eACLA,GADI,IAEPV,WAAY,QAjBpB,kBAoBaW,IAAUC,MACf,4EArBR,cAyBIL,GAAS,SAACG,GAAD,mBAAC,eACLA,GADI,IAEPP,WAAW,OA3BjB,UA4C2Bc,IAAMC,KAAN,UAAcC,oCAAd,SAAoDX,EAAY,CACrFY,QAAS,CAAE,eAAgB,cA7CjC,QA4CUC,EA5CV,OAgDIC,QAAQC,IAAIF,GAhDhB,kDAmDId,GAAS,SAACG,GAAD,mBAAC,eACLA,GADI,IAEPc,GAAI,GACJrB,WAAW,OAGbQ,IAAUC,MAAV,MACAU,QAAQC,IAAR,MA1DJ,2DAxBa,sBAsFb,OACE,sBAAKE,UAAU,YAAf,UACE,qBAAKA,UAAU,SAAf,SACE,oBAAIA,UAAU,eAAd,4CAEF,sBAAKA,UAAU,wBAAf,UACE,qBAAKA,UAAU,cAAf,SACE,sBAAKA,UAAU,iBAAf,UACE,uBAAOC,QAAQ,WAAf,yCACA,uBACEX,KAAK,MACLY,YAAY,4CACZC,MAAO5B,EACPyB,UAAU,WACVI,GAAG,WACHC,SAtFZ,SAAkBC,GAAQ,IAChBH,EAAUG,EAAMC,OAAhBJ,MAERrB,GAAS,SAACG,GAAD,mBAAC,eACLA,GADI,IAEPV,WAAY4B,QAkFJK,aAAa,aAInB,wBAAQR,UAAU,mBAAmBS,QA1G9B,2CA0GP,SACG/B,EAAY,cAAgB,0BClHvCgC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.05c96fc3.chunk.js","sourcesContent":["import cogoToast from \"cogo-toast\";\nimport { useState } from \"react\";\nimport axios from \"axios\";\nimport \"./index.css\";\n\nconst initialState = {\n  namesInput: \"\",\n  names: \"\",\n  lastNames: \"\",\n  isLoading: false,\n};\n\nfunction App() {\n  const [state, setState] = useState(initialState);\n\n  const { namesInput, names, lastNames, isLoading } = state;\n\n  let xmlRequest = `\n    <Envelope xmlns=\"http://schemas.xmlsoap.org/soap/envelope/\">\n    <Body>\n        <splitNames xmlns=\"names:namesservicewsdl\">\n            <name>${namesInput}</name>\n        </splitNames>\n     </Body>\n    </Envelope>\n  `;\n\n  function setField(event) {\n    const { value } = event.target;\n\n    setState((prevState) => ({\n      ...prevState,\n      namesInput: value,\n    }));\n  }\n\n  async function handleSplitClick() {\n    try {\n      if (!namesInput) {\n        setState((prevState) => ({\n          ...prevState,\n          namesInput: \"\",\n        }));\n\n        return cogoToast.error(\n          \"Debes ingresar nombres y apellidos para realizar el split.\"\n        );\n      }\n\n      // Valida que se ingrese al menos un nombre y apellido paterno y materno\n      if (namesInput.split(\" \").filter(name => name).length < 3) {\n        setState((prevState) => ({\n          ...prevState,\n          namesInput: \"\",\n        }));\n\n        return cogoToast.error(\n          \"Debes ingresar al menos un nombre, apellido paterno y apellido materno.\"\n        );\n      }\n\n      setState((prevState) => ({\n        ...prevState,\n        isLoading: true,\n      }));\n\n      // const response = await fetch(\n      // `${process.env.REACT_APP_API_URI}/getDv.php/${rut}`\n      //);\n      //const jsonResponse = await response.json();\n\n      //if (jsonResponse && jsonResponse.data) {\n      //  setState((prevState) => ({\n      //    ...prevState,\n      //    dv: jsonResponse.data,\n      //    isLoading: false,\n      //  }));\n      //  return cogoToast.success(\"Digito verificador calculado con éxito!\");\n      // }\n\n      const response = await axios.post(`${process.env.REACT_APP_API_URI}?wsdl`, xmlRequest, {\n        headers: { \"Content-Type\": \"text/xml\" }\n      })\n\n      console.log(response)\n\n    } catch (error) {\n      setState((prevState) => ({\n        ...prevState,\n        dv: \"\",\n        isLoading: false,\n      }));\n\n      cogoToast.error(error);\n      console.log(error);\n    }\n  }\n\n  return (\n    <div className=\"container\">\n      <div className=\"header\">\n        <h1 className=\"header__text\">Split de nombres y apellidos</h1>\n      </div>\n      <div className=\"input-group-container\">\n        <div className=\"input-group\">\n          <div className=\"main-rut-group\">\n            <label htmlFor=\"main-rut\">Ingrese nombres y apellidos</label>\n            <input\n              name=\"rut\"\n              placeholder=\"Ejemplo: Juan José Rodriguez Hernandez\"\n              value={namesInput}\n              className=\"main-rut\"\n              id=\"main-rut\"\n              onChange={setField}\n              autoComplete=\"off\"\n            />\n          </div>\n        </div>\n        <button className=\"calculate-button\" onClick={handleSplitClick}>\n          {isLoading ? \"Cargando...\" : \"Realizar Split\"}\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './screens/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}