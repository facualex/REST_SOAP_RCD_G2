{"version":3,"sources":["screens/App/index.js","index.js"],"names":["initialState","rut","dv","isLoading","App","useState","state","setState","a","prevState","cogoToast","error","fetch","process","response","json","jsonResponse","data","success","console","log","useEffect","className","htmlFor","name","value","id","onChange","event","target","isNaN","autoComplete","disabled","onClick","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uQAIMA,EAAe,CACnBC,IAAK,GACLC,GAAI,GACJC,WAAW,GA4GEC,MAzGf,WACE,MAA0BC,mBAASL,GAAnC,mBAAOM,EAAP,KAAcC,EAAd,KAEQN,EAAuBK,EAAvBL,IAAKC,EAAkBI,EAAlBJ,GAAIC,EAAcG,EAAdH,UAHJ,4CA0Bb,8BAAAK,EAAA,kEAESP,EAFT,uBAGIM,GAAS,SAACE,GAAD,mBAAC,eACLA,GADI,IAEPP,GAAI,QALV,kBAQaQ,IAAUC,MACf,+DATR,cAaIJ,GAAS,SAACE,GAAD,mBAAC,eACLA,GADI,IAEPP,GAAI,GACJC,WAAW,OAhBjB,SAmB2BS,MAAM,GAAD,OACvBC,6CADuB,sBACoBZ,IApBpD,cAmBUa,EAnBV,iBAsB+BA,EAASC,OAtBxC,aAsBUC,EAtBV,UAwBwBA,EAAaC,KAxBrC,wBAyBMV,GAAS,SAACE,GAAD,mBAAC,eACLA,GADI,IAEPP,GAAIc,EAAaC,KACjBd,WAAW,OA5BnB,kBA8BaO,IAAUQ,QAAQ,+CA9B/B,0DAiCIX,GAAS,SAACE,GAAD,mBAAC,eACLA,GADI,IAEPP,GAAI,GACJC,WAAW,OAGbO,IAAUC,MAAV,MACAQ,QAAQC,IAAR,MAxCJ,2DA1Ba,sBAsEb,OAjEAC,qBAAU,WACPd,GAAS,SAACE,GAAD,mBAAC,eACNA,GADK,IAERP,GAAI,UAGL,CAACD,IA4DF,sBAAKqB,UAAU,YAAf,UACE,qBAAKA,UAAU,SAAf,SACE,oBAAIA,UAAU,eAAd,iDAEF,sBAAKA,UAAU,wBAAf,UACE,sBAAKA,UAAU,cAAf,UACE,sBAAKA,UAAU,iBAAf,UACE,wBAAOC,QAAQ,WAAf,gBAEE,sBAAMD,UAAU,cAAhB,yCAEF,uBACEE,KAAK,MACLC,MAAOxB,EACPqB,UAAU,WACVI,GAAG,WACHC,SA1EZ,SAAgBC,GACd,IAAQH,EAAUG,EAAMC,OAAhBJ,MAEM,OAAVA,GAAkBK,MAAML,IAI5BlB,GAAS,SAACE,GAAD,mBAAC,eACLA,GADI,IAEPR,IAAKwB,QAkEGM,aAAa,WAGjB,sBAAKT,UAAU,WAAf,UACE,uBAAOC,QAAQ,KAAf,gBACA,uBAAOD,UAAU,KAAKI,GAAG,KAAKD,MAAOvB,EAAI8B,UAAQ,UAGrD,wBAAQV,UAAU,mBAAmBW,QAhG9B,2CAgGP,SACG9B,EAAY,cAAgB,uBCtGvC+B,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.8ffeece2.chunk.js","sourcesContent":["import cogoToast from \"cogo-toast\";\r\nimport { useEffect, useState } from \"react\";\r\nimport \"./index.css\";\r\n\r\nconst initialState = {\r\n  rut: \"\",\r\n  dv: \"\",\r\n  isLoading: false,\r\n};\r\n\r\nfunction App() {\r\n  const [state, setState] = useState(initialState);\r\n\r\n  const { rut, dv, isLoading } = state;\r\n\r\n  useEffect(() => {\r\n     setState((prevState) => ({\r\n      ...prevState,\r\n      dv: '',\r\n    }));\r\n\r\n  }, [rut])\r\n\r\n  function setRut(event) {\r\n    const { value } = event.target;\r\n\r\n    if (value !== null && isNaN(value)) {\r\n      return;\r\n    }\r\n\r\n    setState((prevState) => ({\r\n      ...prevState,\r\n      rut: value,\r\n    }));\r\n  }\r\n\r\n  async function handleCalculateClick() {\r\n    try {\r\n      if (!rut) {\r\n      setState((prevState) => ({\r\n        ...prevState,\r\n        dv: '',\r\n      }));\r\n\r\n        return cogoToast.error(\r\n          \"Debes ingresar un rut para calcular el digito verificador.\"\r\n        );\r\n      }\r\n\r\n      setState((prevState) => ({\r\n        ...prevState,\r\n        dv: '',\r\n        isLoading: true,\r\n      }));\r\n\r\n      const response = await fetch(\r\n        `${process.env.REACT_APP_API_URI}/getDv.php/${rut}`\r\n      );\r\n      const jsonResponse = await response.json();\r\n\r\n      if (jsonResponse && jsonResponse.data) {\r\n        setState((prevState) => ({\r\n          ...prevState,\r\n          dv: jsonResponse.data,\r\n          isLoading: false,\r\n        }));\r\n        return cogoToast.success(\"Digito verificador calculado con Ã©xito!\");\r\n      }\r\n    } catch (error) {\r\n      setState((prevState) => ({\r\n        ...prevState,\r\n        dv: '',\r\n        isLoading: false,\r\n      }));\r\n\r\n      cogoToast.error(error);\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"header\">\r\n        <h1 className=\"header__text\">Calculadora de digito verificador</h1>\r\n      </div>\r\n      <div className=\"input-group-container\">\r\n        <div className=\"input-group\">\r\n          <div className=\"main-rut-group\">\r\n            <label htmlFor=\"main-rut\">\r\n              RUT\r\n              <span className=\"sin-dv-span\">(sin digito verificador)</span>\r\n            </label>\r\n            <input\r\n              name=\"rut\"\r\n              value={rut}\r\n              className=\"main-rut\"\r\n              id=\"main-rut\"\r\n              onChange={setRut}\r\n              autoComplete=\"off\"\r\n            />\r\n          </div>\r\n          <div className=\"dv-group\">\r\n            <label htmlFor=\"dv\">DV</label>\r\n            <input className=\"dv\" id=\"dv\" value={dv} disabled />\r\n          </div>\r\n        </div>\r\n        <button className=\"calculate-button\" onClick={handleCalculateClick}>\r\n          {isLoading ? \"Cargando...\" : \"Calcular DV\"}\r\n        </button>\r\n      </div>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport { App } from './screens';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}