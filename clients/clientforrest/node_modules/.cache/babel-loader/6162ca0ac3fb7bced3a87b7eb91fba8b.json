{"ast":null,"code":"var _jsxFileName = \"/Users/facualex/Documents/development/universidad/REST_SOAP_RCD_G2/clients/clientforrest/src/screens/DvCalculator/index.js\",\n    _s = $RefreshSig$();\n\nimport cogoToast from \"cogo-toast\";\nimport { useEffect, useState } from \"react\";\nimport \"./index.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  rut: \"\",\n  dv: \"\",\n  isLoading: false\n};\n\nfunction DvCalculator() {\n  _s();\n\n  const [state, setState] = useState(initialState);\n  const {\n    rut,\n    dv,\n    isLoading\n  } = state;\n  useEffect(() => {\n    setState(prevState => ({ ...prevState,\n      dv: \"\"\n    }));\n  }, [rut]);\n\n  function setRut(event) {\n    const {\n      value\n    } = event.target;\n\n    if (value !== null && isNaN(value)) {\n      return;\n    }\n\n    setState(prevState => ({ ...prevState,\n      rut: value\n    }));\n  }\n\n  async function handleCalculateClick() {\n    try {\n      if (!rut) {\n        setState(prevState => ({ ...prevState,\n          dv: \"\"\n        }));\n        return cogoToast.error(\"Debes ingresar un rut para calcular el digito verificador.\");\n      }\n\n      setState(prevState => ({ ...prevState,\n        dv: \"\",\n        isLoading: true\n      }));\n      const response = await fetch(`${process.env.REACT_APP_API_URI}/getDv`, {\n        method: \"post\",\n        headers: {\n          Accept: \"application/x-www-form-urlencoded\",\n          \"Content-Type\": \"application/x-www-form-urlencoded\"\n        },\n        body: new URLSearchParams({\n          rut\n        })\n      });\n      const jsonResponse = await response.json();\n\n      if (jsonResponse && jsonResponse.data) {\n        setState(prevState => ({ ...prevState,\n          dv: jsonResponse.data,\n          isLoading: false\n        }));\n        return cogoToast.success(\"Digito verificador calculado con Ã©xito!\");\n      }\n    } catch (error) {\n      setState(prevState => ({ ...prevState,\n        dv: \"\",\n        isLoading: false\n      }));\n      cogoToast.error(error);\n      console.log(error);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"header__text\",\n        children: \"Calculadora de digito verificador\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-group-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"main-rut-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"main-rut\",\n            children: [\"RUT\", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"sin-dv-span\",\n              children: \"(sin digito verificador)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            name: \"rut\",\n            value: rut,\n            className: \"main-rut\",\n            id: \"main-rut\",\n            onChange: setRut,\n            autoComplete: \"off\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dv-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"dv\",\n            children: \"DV\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"dv\",\n            id: \"dv\",\n            value: dv,\n            disabled: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"calculate-button\",\n        onClick: handleCalculateClick,\n        children: isLoading ? \"Cargando...\" : \"Calcular DV\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n}\n\n_s(DvCalculator, \"g9yWDQF6ixWa1r5sfsm7YAeGJG4=\");\n\n_c = DvCalculator;\nexport default DvCalculator;\n\nvar _c;\n\n$RefreshReg$(_c, \"DvCalculator\");","map":{"version":3,"sources":["/Users/facualex/Documents/development/universidad/REST_SOAP_RCD_G2/clients/clientforrest/src/screens/DvCalculator/index.js"],"names":["cogoToast","useEffect","useState","initialState","rut","dv","isLoading","DvCalculator","state","setState","prevState","setRut","event","value","target","isNaN","handleCalculateClick","error","response","fetch","process","env","REACT_APP_API_URI","method","headers","Accept","body","URLSearchParams","jsonResponse","json","data","success","console","log"],"mappings":"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","sourcesContent":["import cogoToast from \"cogo-toast\";\nimport { useEffect, useState } from \"react\";\nimport \"./index.css\";\n\nconst initialState = {\n  rut: \"\",\n  dv: \"\",\n  isLoading: false,\n};\n\nfunction DvCalculator() {\n  const [state, setState] = useState(initialState);\n\n  const { rut, dv, isLoading } = state;\n\n  useEffect(() => {\n    setState((prevState) => ({\n      ...prevState,\n      dv: \"\",\n    }));\n  }, [rut]);\n\n  function setRut(event) {\n    const { value } = event.target;\n\n    if (value !== null && isNaN(value)) {\n      return;\n    }\n\n    setState((prevState) => ({\n      ...prevState,\n      rut: value,\n    }));\n  }\n\n  async function handleCalculateClick() {\n    try {\n      if (!rut) {\n        setState((prevState) => ({\n          ...prevState,\n          dv: \"\",\n        }));\n\n        return cogoToast.error(\n          \"Debes ingresar un rut para calcular el digito verificador.\"\n        );\n      }\n\n      setState((prevState) => ({\n        ...prevState,\n        dv: \"\",\n        isLoading: true,\n      }));\n\n      const response = await fetch(`${process.env.REACT_APP_API_URI}/getDv`, {\n        method: \"post\",\n        headers: {\n          Accept: \"application/x-www-form-urlencoded\",\n          \"Content-Type\": \"application/x-www-form-urlencoded\",\n        },\n        body: new URLSearchParams({\n          rut,\n        })\n      });\n\n      const jsonResponse = await response.json();\n\n      if (jsonResponse && jsonResponse.data) {\n        setState((prevState) => ({\n          ...prevState,\n          dv: jsonResponse.data,\n          isLoading: false,\n        }));\n        return cogoToast.success(\"Digito verificador calculado con Ã©xito!\");\n      }\n    } catch (error) {\n      setState((prevState) => ({\n        ...prevState,\n        dv: \"\",\n        isLoading: false,\n      }));\n\n      cogoToast.error(error);\n      console.log(error);\n    }\n  }\n\n  return (\n    <div className=\"container\">\n      <div className=\"header\">\n        <h1 className=\"header__text\">Calculadora de digito verificador</h1>\n      </div>\n      <div className=\"input-group-container\">\n        <div className=\"input-group\">\n          <div className=\"main-rut-group\">\n            <label htmlFor=\"main-rut\">\n              RUT\n              <span className=\"sin-dv-span\">(sin digito verificador)</span>\n            </label>\n            <input\n              name=\"rut\"\n              value={rut}\n              className=\"main-rut\"\n              id=\"main-rut\"\n              onChange={setRut}\n              autoComplete=\"off\"\n            />\n          </div>\n          <div className=\"dv-group\">\n            <label htmlFor=\"dv\">DV</label>\n            <input className=\"dv\" id=\"dv\" value={dv} disabled />\n          </div>\n        </div>\n        <button className=\"calculate-button\" onClick={handleCalculateClick}>\n          {isLoading ? \"Cargando...\" : \"Calcular DV\"}\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default DvCalculator;\n"]},"metadata":{},"sourceType":"module"}