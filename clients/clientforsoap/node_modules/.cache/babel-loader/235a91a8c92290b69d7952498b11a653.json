{"ast":null,"code":"import _regeneratorRuntime from\"/Users/facualex/Documents/development/universidad/REST_SOAP_RCD_G2/clients/clientforsoap/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/facualex/Documents/development/universidad/REST_SOAP_RCD_G2/clients/clientforsoap/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _objectSpread from\"/Users/facualex/Documents/development/universidad/REST_SOAP_RCD_G2/clients/clientforsoap/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/Users/facualex/Documents/development/universidad/REST_SOAP_RCD_G2/clients/clientforsoap/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import cogoToast from\"cogo-toast\";import{useState}from\"react\";import axios from\"axios\";import XMLParser from'react-xml-parser';import\"./index.css\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var initialState={namesInput:\"\",names:\"\",lastNames:\"\",isLoading:false};function App(){var _useState=useState(initialState),_useState2=_slicedToArray(_useState,2),state=_useState2[0],setState=_useState2[1];var namesInput=state.namesInput,names=state.names,lastNames=state.lastNames,isLoading=state.isLoading;var xmlRequest=\"\\n    <Envelope xmlns=\\\"http://schemas.xmlsoap.org/soap/envelope/\\\">\\n    <Body>\\n        <splitNames xmlns=\\\"names:namesservicewsdl\\\">\\n            <name>\".concat(namesInput,\"</name>\\n        </splitNames>\\n     </Body>\\n    </Envelope>\\n  \");function setField(event){var value=event.target.value;setState(function(prevState){return _objectSpread(_objectSpread({},prevState),{},{namesInput:value});});}function handleSplitClick(){return _handleSplitClick.apply(this,arguments);}function _handleSplitClick(){_handleSplitClick=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var response,parsedXMLResponse;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;if(namesInput){_context.next=4;break;}setState(function(prevState){return _objectSpread(_objectSpread({},prevState),{},{namesInput:\"\"});});return _context.abrupt(\"return\",cogoToast.error(\"Debes ingresar nombres y apellidos para realizar el split.\"));case 4:if(!(namesInput.split(\" \").filter(function(name){return name;}).length<3)){_context.next=7;break;}setState(function(prevState){return _objectSpread(_objectSpread({},prevState),{},{namesInput:\"\"});});return _context.abrupt(\"return\",cogoToast.error(\"Debes ingresar al menos un nombre, apellido paterno y apellido materno.\"));case 7:setState(function(prevState){return _objectSpread(_objectSpread({},prevState),{},{isLoading:true});});// const response = await fetch(\n// `${process.env.REACT_APP_API_URI}/getDv.php/${rut}`\n//);\n//const jsonResponse = await response.json();\n//if (jsonResponse && jsonResponse.data) {\n//  setState((prevState) => ({\n//    ...prevState,\n//    dv: jsonResponse.data,\n//    isLoading: false,\n//  }));\n//  return cogoToast.success(\"Digito verificador calculado con éxito!\");\n// }\n_context.next=10;return axios.post(\"\".concat(process.env.REACT_APP_API_URI,\"?wsdl\"),xmlRequest,{headers:{\"Content-Type\":\"text/xml\"}});case 10:response=_context.sent;parsedXMLResponse=new XMLParser().parseFromString(response.data);console.log(parsedXMLResponse);_context.next=20;break;case 15:_context.prev=15;_context.t0=_context[\"catch\"](0);setState(function(prevState){return _objectSpread(_objectSpread({},prevState),{},{dv:\"\",isLoading:false});});cogoToast.error(_context.t0);console.log(_context.t0);case 20:case\"end\":return _context.stop();}}},_callee,null,[[0,15]]);}));return _handleSplitClick.apply(this,arguments);}return/*#__PURE__*/_jsxs(\"div\",{className:\"container\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"header\",children:/*#__PURE__*/_jsx(\"h1\",{className:\"header__text\",children:\"Split de nombres y apellidos\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"input-group-container\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"input-group\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"main-rut-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"main-rut\",children:\"Ingrese nombres y apellidos\"}),/*#__PURE__*/_jsx(\"input\",{name:\"rut\",placeholder:\"Ejemplo: Juan Jos\\xE9 Rodriguez Hernandez\",value:namesInput,className:\"main-rut\",id:\"main-rut\",onChange:setField,autoComplete:\"off\"})]})}),/*#__PURE__*/_jsx(\"button\",{className:\"calculate-button\",onClick:handleSplitClick,children:isLoading?\"Cargando...\":\"Realizar Split\"})]})]});}export default App;","map":{"version":3,"sources":["/Users/facualex/Documents/development/universidad/REST_SOAP_RCD_G2/clients/clientforsoap/src/screens/App/index.js"],"names":["cogoToast","useState","axios","XMLParser","initialState","namesInput","names","lastNames","isLoading","App","state","setState","xmlRequest","setField","event","value","target","prevState","handleSplitClick","error","split","filter","name","length","post","process","env","REACT_APP_API_URI","headers","response","parsedXMLResponse","parseFromString","data","console","log","dv"],"mappings":"wzBAAA,MAAOA,CAAAA,SAAP,KAAsB,YAAtB,CACA,OAASC,QAAT,KAAyB,OAAzB,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,SAAP,KAAsB,kBAAtB,CACA,MAAO,aAAP,C,wFAEA,GAAMC,CAAAA,YAAY,CAAG,CACnBC,UAAU,CAAE,EADO,CAEnBC,KAAK,CAAE,EAFY,CAGnBC,SAAS,CAAE,EAHQ,CAInBC,SAAS,CAAE,KAJQ,CAArB,CAOA,QAASC,CAAAA,GAAT,EAAe,eACaR,QAAQ,CAACG,YAAD,CADrB,wCACNM,KADM,eACCC,QADD,kBAGLN,CAAAA,UAHK,CAGuCK,KAHvC,CAGLL,UAHK,CAGOC,KAHP,CAGuCI,KAHvC,CAGOJ,KAHP,CAGcC,SAHd,CAGuCG,KAHvC,CAGcH,SAHd,CAGyBC,SAHzB,CAGuCE,KAHvC,CAGyBF,SAHzB,CAKb,GAAII,CAAAA,UAAU,sKAIIP,UAJJ,qEAAd,CAUA,QAASQ,CAAAA,QAAT,CAAkBC,KAAlB,CAAyB,IACfC,CAAAA,KADe,CACLD,KAAK,CAACE,MADD,CACfD,KADe,CAGvBJ,QAAQ,CAAC,SAACM,SAAD,wCACJA,SADI,MAEPZ,UAAU,CAAEU,KAFL,IAAD,CAAR,CAID,CAtBY,QAwBEG,CAAAA,gBAxBF,0JAwBb,qLAESb,UAFT,yBAGMM,QAAQ,CAAC,SAACM,SAAD,wCACJA,SADI,MAEPZ,UAAU,CAAE,EAFL,IAAD,CAAR,CAHN,gCAQaL,SAAS,CAACmB,KAAV,CACL,4DADK,CARb,cAcQd,UAAU,CAACe,KAAX,CAAiB,GAAjB,EAAsBC,MAAtB,CAA6B,SAAAC,IAAI,QAAIA,CAAAA,IAAJ,EAAjC,EAA2CC,MAA3C,CAAoD,CAd5D,0BAeMZ,QAAQ,CAAC,SAACM,SAAD,wCACJA,SADI,MAEPZ,UAAU,CAAE,EAFL,IAAD,CAAR,CAfN,gCAoBaL,SAAS,CAACmB,KAAV,CACL,yEADK,CApBb,SAyBIR,QAAQ,CAAC,SAACM,SAAD,wCACJA,SADI,MAEPT,SAAS,CAAE,IAFJ,IAAD,CAAR,CAKA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA1CJ,uBA4C2BN,CAAAA,KAAK,CAACsB,IAAN,WAAcC,OAAO,CAACC,GAAR,CAAYC,iBAA1B,UAAoDf,UAApD,CAAgE,CACrFgB,OAAO,CAAE,CAAE,eAAgB,UAAlB,CAD4E,CAAhE,CA5C3B,SA4CUC,QA5CV,eAgDUC,iBAhDV,CAgD8B,GAAI3B,CAAAA,SAAJ,GAAgB4B,eAAhB,CAAgCF,QAAQ,CAACG,IAAzC,CAhD9B,CAiDIC,OAAO,CAACC,GAAR,CAAYJ,iBAAZ,EAjDJ,iFAoDInB,QAAQ,CAAC,SAACM,SAAD,wCACJA,SADI,MAEPkB,EAAE,CAAE,EAFG,CAGP3B,SAAS,CAAE,KAHJ,IAAD,CAAR,CAMAR,SAAS,CAACmB,KAAV,cACAc,OAAO,CAACC,GAAR,cA3DJ,qEAxBa,mDAuFb,mBACE,aAAK,SAAS,CAAC,WAAf,wBACE,YAAK,SAAS,CAAC,QAAf,uBACE,WAAI,SAAS,CAAC,cAAd,0CADF,EADF,cAIE,aAAK,SAAS,CAAC,uBAAf,wBACE,YAAK,SAAS,CAAC,aAAf,uBACE,aAAK,SAAS,CAAC,gBAAf,wBACE,cAAO,OAAO,CAAC,UAAf,yCADF,cAEE,cACE,IAAI,CAAC,KADP,CAEE,WAAW,CAAC,2CAFd,CAGE,KAAK,CAAE7B,UAHT,CAIE,SAAS,CAAC,UAJZ,CAKE,EAAE,CAAC,UALL,CAME,QAAQ,CAAEQ,QANZ,CAOE,YAAY,CAAC,KAPf,EAFF,GADF,EADF,cAeE,eAAQ,SAAS,CAAC,kBAAlB,CAAqC,OAAO,CAAEK,gBAA9C,UACGV,SAAS,CAAG,aAAH,CAAmB,gBAD/B,EAfF,GAJF,GADF,CA0BD,CAED,cAAeC,CAAAA,GAAf","sourcesContent":["import cogoToast from \"cogo-toast\";\nimport { useState } from \"react\";\nimport axios from \"axios\";\nimport XMLParser from 'react-xml-parser';\nimport \"./index.css\";\n\nconst initialState = {\n  namesInput: \"\",\n  names: \"\",\n  lastNames: \"\",\n  isLoading: false,\n};\n\nfunction App() {\n  const [state, setState] = useState(initialState);\n\n  const { namesInput, names, lastNames, isLoading } = state;\n\n  let xmlRequest = `\n    <Envelope xmlns=\"http://schemas.xmlsoap.org/soap/envelope/\">\n    <Body>\n        <splitNames xmlns=\"names:namesservicewsdl\">\n            <name>${namesInput}</name>\n        </splitNames>\n     </Body>\n    </Envelope>\n  `;\n\n  function setField(event) {\n    const { value } = event.target;\n\n    setState((prevState) => ({\n      ...prevState,\n      namesInput: value,\n    }));\n  }\n\n  async function handleSplitClick() {\n    try {\n      if (!namesInput) {\n        setState((prevState) => ({\n          ...prevState,\n          namesInput: \"\",\n        }));\n\n        return cogoToast.error(\n          \"Debes ingresar nombres y apellidos para realizar el split.\"\n        );\n      }\n\n      // Valida que se ingrese al menos un nombre y apellido paterno y materno\n      if (namesInput.split(\" \").filter(name => name).length < 3) {\n        setState((prevState) => ({\n          ...prevState,\n          namesInput: \"\",\n        }));\n\n        return cogoToast.error(\n          \"Debes ingresar al menos un nombre, apellido paterno y apellido materno.\"\n        );\n      }\n\n      setState((prevState) => ({\n        ...prevState,\n        isLoading: true,\n      }));\n\n      // const response = await fetch(\n      // `${process.env.REACT_APP_API_URI}/getDv.php/${rut}`\n      //);\n      //const jsonResponse = await response.json();\n\n      //if (jsonResponse && jsonResponse.data) {\n      //  setState((prevState) => ({\n      //    ...prevState,\n      //    dv: jsonResponse.data,\n      //    isLoading: false,\n      //  }));\n      //  return cogoToast.success(\"Digito verificador calculado con éxito!\");\n      // }\n\n      const response = await axios.post(`${process.env.REACT_APP_API_URI}?wsdl`, xmlRequest, {\n        headers: { \"Content-Type\": \"text/xml\" }\n      })\n\n      const parsedXMLResponse = new XMLParser().parseFromString(response.data);\n      console.log(parsedXMLResponse)\n\n    } catch (error) {\n      setState((prevState) => ({\n        ...prevState,\n        dv: \"\",\n        isLoading: false,\n      }));\n\n      cogoToast.error(error);\n      console.log(error);\n    }\n  }\n\n  return (\n    <div className=\"container\">\n      <div className=\"header\">\n        <h1 className=\"header__text\">Split de nombres y apellidos</h1>\n      </div>\n      <div className=\"input-group-container\">\n        <div className=\"input-group\">\n          <div className=\"main-rut-group\">\n            <label htmlFor=\"main-rut\">Ingrese nombres y apellidos</label>\n            <input\n              name=\"rut\"\n              placeholder=\"Ejemplo: Juan José Rodriguez Hernandez\"\n              value={namesInput}\n              className=\"main-rut\"\n              id=\"main-rut\"\n              onChange={setField}\n              autoComplete=\"off\"\n            />\n          </div>\n        </div>\n        <button className=\"calculate-button\" onClick={handleSplitClick}>\n          {isLoading ? \"Cargando...\" : \"Realizar Split\"}\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}