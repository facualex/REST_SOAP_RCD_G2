{"version":3,"sources":["api/index.js","screens/DvCalculator/index.js","screens/NameSplitter/index.js","App.js","index.js"],"names":["API","getDv","rut","a","fetch","process","method","headers","Accept","body","URLSearchParams","splitNames","names","initialState","dv","isLoading","DvCalculator","useState","state","setState","prevState","cogoToast","error","response","json","jsonResponse","data","success","console","log","useEffect","className","htmlFor","name","placeholder","value","id","onChange","event","target","isNaN","autoComplete","disabled","onClick","namesInput","lastNames","App","split","filter","length","map","index","lastName","selectOptions","styles","buttonGroup","display","width","justifyContent","alignItems","marginTop","button","backgroundColor","color","fontSize","border","minWidth","padding","selectedButton","selectedOption","handleOptionChange","style","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3d0de31b.chunk.js","sourcesContent":["const API = {}\r\n\r\nAPI.getDv = async (rut) => await fetch(`${process.env.REACT_APP_API_URI}/getDv`, {\r\n        method: \"post\",\r\n        headers: {\r\n          Accept: \"application/x-www-form-urlencoded\",\r\n          \"Content-Type\": \"application/x-www-form-urlencoded\",\r\n        },\r\n        body: new URLSearchParams({\r\n          rut,\r\n        })\r\n});\r\n\r\nAPI.splitNames = async (names) => await fetch(`${process.env.REACT_APP_API_URI}/splitNames`, {\r\n    method: \"post\",\r\n    headers: {\r\n      Accept: \"application/x-www-form-urlencoded\",\r\n      \"Content-Type\": \"application/x-www-form-urlencoded\",\r\n    },\r\n    body: new URLSearchParams({\r\n      names,\r\n    })\r\n}); \r\n\r\nexport default API\r\n","import cogoToast from \"cogo-toast\";\r\nimport { useEffect, useState } from \"react\";\r\nimport API from \"../../api\"\r\nimport \"./index.css\";\r\n\r\nconst initialState = {\r\n  rut: \"\",\r\n  dv: \"\",\r\n  isLoading: false,\r\n};\r\n\r\nfunction DvCalculator() {\r\n  const [state, setState] = useState(initialState);\r\n\r\n  const { rut, dv, isLoading } = state;\r\n\r\n  useEffect(() => {\r\n    setState((prevState) => ({\r\n      ...prevState,\r\n      dv: \"\",\r\n    }));\r\n  }, [rut]);\r\n\r\n  function setRut(event) {\r\n    const { value } = event.target;\r\n\r\n    if (value !== null && isNaN(value)) {\r\n      return;\r\n    }\r\n\r\n    setState((prevState) => ({\r\n      ...prevState,\r\n      rut: value,\r\n    }));\r\n  }\r\n\r\n  async function handleCalculateClick() {\r\n    try {\r\n      if (!rut) {\r\n        setState((prevState) => ({\r\n          ...prevState,\r\n          dv: \"\",\r\n        }));\r\n\r\n        return cogoToast.error(\r\n          \"Debes ingresar un rut para calcular el digito verificador.\"\r\n        );\r\n      }\r\n\r\n      setState((prevState) => ({\r\n        ...prevState,\r\n        dv: \"\",\r\n        isLoading: true,\r\n      }));\r\n\r\n      const response = await API.getDv(rut) \r\n      const jsonResponse = await response.json();\r\n\r\n      if (jsonResponse && jsonResponse.data) {\r\n        setState((prevState) => ({\r\n          ...prevState,\r\n          dv: jsonResponse.data,\r\n          isLoading: false,\r\n        }));\r\n        return cogoToast.success(\"Digito verificador calculado con Ã©xito!\");\r\n      }\r\n    } catch (error) {\r\n      setState((prevState) => ({\r\n        ...prevState,\r\n        dv: \"\",\r\n        isLoading: false,\r\n      }));\r\n\r\n      cogoToast.error(error);\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"input-group-container\">\r\n        <div className=\"input-group\">\r\n          <div className=\"main-rut-group\">\r\n            <label htmlFor=\"main-rut\">\r\n              RUT\r\n              <span className=\"sin-dv-span\">(sin digito verificador)</span>\r\n            </label>\r\n            <input\r\n              name=\"rut\"\r\n              placeholder=\"Ejemplo: 12345678\"\r\n              value={rut}\r\n              className=\"main-rut\"\r\n              id=\"main-rut\"\r\n              onChange={setRut}\r\n              autoComplete=\"off\"\r\n            />\r\n          </div>\r\n          <div className=\"dv-group\">\r\n            <label htmlFor=\"dv\">DV</label>\r\n            <input className=\"dv\" id=\"dv\" value={dv} disabled />\r\n          </div>\r\n        </div>\r\n        <button className=\"calculate-button\" onClick={handleCalculateClick}>\r\n          {isLoading ? \"Cargando...\" : \"Calcular DV\"}\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DvCalculator;\r\n","import cogoToast from \"cogo-toast\";\r\nimport { useState } from \"react\";\r\nimport API from \"../../api\";\r\nimport \"./index.css\";\r\n\r\nconst initialState = {\r\n  namesInput: \"\",\r\n  names: \"\",\r\n  lastNames: \"\",\r\n  isLoading: false,\r\n};\r\n\r\nfunction App() {\r\n  const [state, setState] = useState(initialState);\r\n\r\n  const { namesInput, names, lastNames, isLoading } = state;\r\n\r\n  function setField(event) {\r\n    const { value } = event.target;\r\n\r\n    setState((prevState) => ({\r\n      ...prevState,\r\n      namesInput: value,\r\n    }));\r\n  }\r\n\r\n  async function handleSplitClick() {\r\n    try {\r\n      if (!namesInput) {\r\n        setState((prevState) => ({\r\n          ...prevState,\r\n          namesInput: \"\",\r\n        }));\r\n\r\n        return cogoToast.error(\r\n          \"Debes ingresar nombres y apellidos para realizar el split.\"\r\n        );\r\n      }\r\n\r\n      // Valida que se ingrese al menos un nombre y apellido paterno y materno\r\n      if (namesInput.split(\" \").filter((name) => name).length < 3) {\r\n        setState((prevState) => ({\r\n          ...prevState,\r\n          namesInput: \"\",\r\n        }));\r\n\r\n        return cogoToast.error(\r\n          \"Debes ingresar al menos un nombre, apellido paterno y apellido materno.\"\r\n        );\r\n      }\r\n\r\n      setState((prevState) => ({\r\n        ...prevState,\r\n        isLoading: true,\r\n      }));\r\n\r\n      const response = await API.splitNames(namesInput);\r\n      const jsonResponse = await response.json();\r\n\r\n      if (jsonResponse && jsonResponse.data) {\r\n        const { names, lastNames } = jsonResponse.data;\r\n\r\n        setState((prevState) => ({\r\n          ...prevState,\r\n          names,\r\n          lastNames,\r\n          isLoading: false,\r\n        }));\r\n        return cogoToast.success(\"OperaciÃ³n realizada con Ã©xito!\");\r\n      }\r\n    } catch (error) {\r\n      setState((prevState) => ({\r\n        ...prevState,\r\n        dv: \"\",\r\n        isLoading: false,\r\n      }));\r\n\r\n      cogoToast.error(error);\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"input-group-container\">\r\n        <div className=\"input-group\">\r\n          <div className=\"main-rut-group\">\r\n            <label htmlFor=\"main-rut\">Ingrese nombres y apellidos</label>\r\n            <input\r\n              name=\"rut\"\r\n              placeholder=\"Ejemplo: Juan JosÃ© Rodriguez Hernandez\"\r\n              value={namesInput}\r\n              className=\"main-rut\"\r\n              id=\"main-rut\"\r\n              onChange={setField}\r\n              autoComplete=\"off\"\r\n            />\r\n          </div>\r\n        </div>\r\n        <button className=\"calculate-button\" onClick={handleSplitClick}>\r\n          {isLoading ? \"Cargando...\" : \"Realizar Split\"}\r\n        </button>\r\n      </div>\r\n      {names && lastNames ? (\r\n        <div className=\"results-container\">\r\n          <div className=\"names-container\">\r\n            <h2 className=\"names-container-title\">Nombres</h2>\r\n            {names\r\n              ? names.map((name, index) => (\r\n                  <div className=\"result-item\">\r\n                    <span className=\"result-item-count\">{index + 1}</span>\r\n                    <div className=\"result-item-text\">{name}</div>\r\n                  </div>\r\n                ))\r\n              : null}\r\n          </div>\r\n          <div className=\"lastNames-container\">\r\n            <h2 className=\"names-container-title\">Apellidos</h2>\r\n            {names\r\n              ? lastNames.map((lastName, index) => (\r\n                  <div className=\"result-item\">\r\n                    <span className=\"result-item-count\">{index + 1}</span>\r\n                    <div className=\"result-item-text\">{lastName}</div>\r\n                  </div>\r\n                ))\r\n              : null}\r\n          </div>\r\n        </div>\r\n      ) : null}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { useState } from \"react\";\r\nimport { DvCalculator, NameSplitter } from \"./screens\";\r\n\r\nconst selectOptions = {\r\n  DV_CALCULATOR: \"dvCalculator\",\r\n  NAME_SPLITTER: \"nameSplitter\",\r\n};\r\n\r\nconst styles = {\r\n  buttonGroup: {\r\n    display: \"flex\",\r\n    width: \"100%\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    marginTop: \"1.6rem\",\r\n  },\r\n  button: {\r\n    backgroundColor: \"white\",\r\n    color: \"#89C6D3\",\r\n    fontSize: \"0.8rem\",\r\n    border: \"1px solid #89C6D3\",\r\n    minWidth: \"10rem\",\r\n    padding: \"1rem 1.5rem\",\r\n  },\r\n  selectedButton: {\r\n    backgroundColor: \"#89C6D3\",\r\n    color: \"white\",\r\n  },\r\n};\r\n\r\nconst initialState = {\r\n  selectedOption: selectOptions.DV_CALCULATOR,\r\n};\r\n\r\nfunction App() {\r\n  const  [state, setState] = useState(initialState);\r\n\r\n  const { selectedOption } = state\r\n\r\n  function handleOptionChange(event) {\r\n    const { target } = event;\r\n\r\n    setState((prevState) => ({ ...prevState, selectedOption: target.name }))\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div style={styles.buttonGroup}>\r\n        <button\r\n          name={selectOptions.DV_CALCULATOR}\r\n          onClick={handleOptionChange}\r\n          style={\r\n            selectedOption === selectOptions.DV_CALCULATOR\r\n              ? { ...styles.button, ...styles.selectedButton }\r\n              : { ...styles.button }\r\n          }\r\n        >\r\n          Calculadora de DV\r\n        </button>\r\n        <button\r\n          name={selectOptions.NAME_SPLITTER}\r\n          onClick={handleOptionChange}\r\n          style={\r\n            selectedOption === selectOptions.NAME_SPLITTER\r\n              ? { ...styles.button, ...styles.selectedButton }\r\n              : { ...styles.button }\r\n          }\r\n        >\r\n          Split de nombres\r\n        </button>\r\n      </div>\r\n      { selectedOption === selectOptions.DV_CALCULATOR ? <DvCalculator /> : <NameSplitter /> }\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\"\r\nimport \"./index.css\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <div className=\"header\">\r\n      REST WebService Client\r\n    </div>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}