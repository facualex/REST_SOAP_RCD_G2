{"ast":null,"code":"var _jsxFileName = \"/Users/facualex/Documents/development/universidad/REST_SOAP_RCD_G2/clients/clientforsoap/src/screens/App/index.js\",\n    _s = $RefreshSig$();\n\nimport cogoToast from \"cogo-toast\";\nimport { useState } from \"react\";\nimport axios from \"axios\";\nimport \"./index.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  namesInput: \"\",\n  names: \"\",\n  lastNames: \"\",\n  isLoading: false\n};\n\nfunction App() {\n  _s();\n\n  const [state, setState] = useState(initialState);\n  const {\n    namesInput,\n    names,\n    lastNames,\n    isLoading\n  } = state;\n  let xmlRequest = `\n    <Envelope xmlns=\"http://schemas.xmlsoap.org/soap/envelope/\">\n    <Body>\n        <splitNames xmlns=\"names:namesservicewsdl\">\n            <name>${namesInput}</name>\n        </splitNames>\n     </Body>\n    </Envelope>\n  `;\n\n  function setField(event) {\n    const {\n      value\n    } = event.target;\n    setState(prevState => ({ ...prevState,\n      namesInput: value\n    }));\n  }\n\n  async function handleSplitClick() {\n    try {\n      if (!namesInput) {\n        setState(prevState => ({ ...prevState,\n          namesInput: \"\"\n        }));\n        return cogoToast.error(\"Debes ingresar nombres y apellidos para realizar el split.\");\n      } // TODO: Validar ingresar al menos un nombre y apellido paterno y materno\n\n\n      if (namesInput.split(\" \").length < 3) {\n        setState(prevState => ({ ...prevState,\n          namesInput: \"\"\n        }));\n        return cogoToast.error(\"Debes ingresar nombres y apellidos para realizar el split.\");\n      }\n\n      setState(prevState => ({ ...prevState,\n        isLoading: true\n      })); // const response = await fetch(\n      // `${process.env.REACT_APP_API_URI}/getDv.php/${rut}`\n      //);\n      //const jsonResponse = await response.json();\n      //if (jsonResponse && jsonResponse.data) {\n      //  setState((prevState) => ({\n      //    ...prevState,\n      //    dv: jsonResponse.data,\n      //    isLoading: false,\n      //  }));\n      //  return cogoToast.success(\"Digito verificador calculado con éxito!\");\n      // }\n    } catch (error) {\n      setState(prevState => ({ ...prevState,\n        dv: \"\",\n        isLoading: false\n      }));\n      cogoToast.error(error);\n      console.log(error);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"header__text\",\n        children: \"Split de nombres y apellidos\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-group-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"main-rut-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"main-rut\",\n            children: \"Ingrese nombres y apellidos\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            name: \"rut\",\n            placeholder: \"Ejemplo: Juan Jos\\xE9 Rodriguez Hernandez\",\n            value: namesInput,\n            className: \"main-rut\",\n            id: \"main-rut\",\n            onChange: setField,\n            autoComplete: \"off\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"calculate-button\",\n        onClick: handleSplitClick,\n        children: isLoading ? \"Cargando...\" : \"Realizar Split\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"2/eSVXfk2V5ZKttKXeUPXMa6Sd8=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/facualex/Documents/development/universidad/REST_SOAP_RCD_G2/clients/clientforsoap/src/screens/App/index.js"],"names":["cogoToast","useState","axios","initialState","namesInput","names","lastNames","isLoading","App","state","setState","xmlRequest","setField","event","value","target","prevState","handleSplitClick","error","split","length","dv","console","log"],"mappings":"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","sourcesContent":["import cogoToast from \"cogo-toast\";\nimport { useState } from \"react\";\nimport axios from \"axios\";\nimport \"./index.css\";\n\nconst initialState = {\n  namesInput: \"\",\n  names: \"\",\n  lastNames: \"\",\n  isLoading: false,\n};\n\nfunction App() {\n  const [state, setState] = useState(initialState);\n\n  const { namesInput, names, lastNames, isLoading } = state;\n\n  let xmlRequest = `\n    <Envelope xmlns=\"http://schemas.xmlsoap.org/soap/envelope/\">\n    <Body>\n        <splitNames xmlns=\"names:namesservicewsdl\">\n            <name>${namesInput}</name>\n        </splitNames>\n     </Body>\n    </Envelope>\n  `;\n\n  function setField(event) {\n    const { value } = event.target;\n\n    setState((prevState) => ({\n      ...prevState,\n      namesInput: value,\n    }));\n  }\n\n  async function handleSplitClick() {\n    try {\n      if (!namesInput) {\n        setState((prevState) => ({\n          ...prevState,\n          namesInput: \"\",\n        }));\n\n        return cogoToast.error(\n          \"Debes ingresar nombres y apellidos para realizar el split.\"\n        );\n      }\n\n      // TODO: Validar ingresar al menos un nombre y apellido paterno y materno\n      if (namesInput.split(\" \").length < 3) {\n        setState((prevState) => ({\n          ...prevState,\n          namesInput: \"\",\n        }));\n\n        return cogoToast.error(\n          \"Debes ingresar nombres y apellidos para realizar el split.\"\n        );\n      }\n\n      setState((prevState) => ({\n        ...prevState,\n        isLoading: true,\n      }));\n\n      // const response = await fetch(\n      // `${process.env.REACT_APP_API_URI}/getDv.php/${rut}`\n      //);\n      //const jsonResponse = await response.json();\n\n      //if (jsonResponse && jsonResponse.data) {\n      //  setState((prevState) => ({\n      //    ...prevState,\n      //    dv: jsonResponse.data,\n      //    isLoading: false,\n      //  }));\n      //  return cogoToast.success(\"Digito verificador calculado con éxito!\");\n      // }\n    } catch (error) {\n      setState((prevState) => ({\n        ...prevState,\n        dv: \"\",\n        isLoading: false,\n      }));\n\n      cogoToast.error(error);\n      console.log(error);\n    }\n  }\n\n  return (\n    <div className=\"container\">\n      <div className=\"header\">\n        <h1 className=\"header__text\">Split de nombres y apellidos</h1>\n      </div>\n      <div className=\"input-group-container\">\n        <div className=\"input-group\">\n          <div className=\"main-rut-group\">\n            <label htmlFor=\"main-rut\">Ingrese nombres y apellidos</label>\n            <input\n              name=\"rut\"\n              placeholder=\"Ejemplo: Juan José Rodriguez Hernandez\"\n              value={namesInput}\n              className=\"main-rut\"\n              id=\"main-rut\"\n              onChange={setField}\n              autoComplete=\"off\"\n            />\n          </div>\n        </div>\n        <button className=\"calculate-button\" onClick={handleSplitClick}>\n          {isLoading ? \"Cargando...\" : \"Realizar Split\"}\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}